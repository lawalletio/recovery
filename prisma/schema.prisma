generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum RecoveryMethod {
  EMAIL
}

model Holder {
  pubKey String @id @map("pub_key")

  recoveryTokens    RecoveryToken[]   @relation
  delegations       Delegation[]      @relation
  recoveryChannels  RecoveryChannel[] @relation
  receivedTransfers AccountTransfer[] @relation("receiver")
  givenTransfers    AccountTransfer[] @relation("transferer")
}

model RecoveryChannel {
  uuid String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  holderPubKey String         @map("holder_pub_key")
  method       RecoveryMethod
  contactInfo  String         @map("contact_info")
  optIn        Boolean        @map("opt_in")

  holder Holder @relation(fields: [holderPubKey], references: [pubKey])

  @@index([holderPubKey])
  @@map("recovery_channel")
}

model RecoveryToken {
  uuid String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  holderPubKey String    @map("holder_pub_key")
  token        String    @unique
  createdAt    DateTime  @default(now()) @map("created_at")
  usedAt       DateTime?
  ttlMs        Int       @map("ttl_ms")

  holder    Holder            @relation(fields: [holderPubKey], references: [pubKey])
  transfers AccountTransfer[] @relation

  @@index([holderPubKey])
  @@map("recovery_token")
}

model Delegation {
  uuid String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  delegatorPubKey String   @map("delegator_pub_key")
  since           DateTime
  until           DateTime
  conditions      String
  delegationToken String   @unique @map("delegation_token")

  holder Holder @relation(fields: [delegatorPubKey], references: [pubKey])
}

model AccountTransfer {
  uuid String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  fromPubKey        String         @map("from_pub_key")
  toPubKey          String         @map("to_pub_key")
  recoveryTokenUuid String         @map("recovery_token_uuid") @db.Uuid
  createdAt         DateTime       @default(now()) @map("created_at")
  recoveryMethod    RecoveryMethod @map("recovery_method")
  contactInfo       String         @map("contact_info")

  from          Holder        @relation("transferer", fields: [fromPubKey], references: [pubKey])
  to            Holder        @relation("receiver", fields: [toPubKey], references: [pubKey])
  recoveryToken RecoveryToken @relation(fields: [recoveryTokenUuid], references: [uuid])

  @@map("account_transfer")
}
